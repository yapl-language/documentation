{
  "scopeName": "source.yapl",
  "name": "YAPL",
  "fileTypes": ["yapl"],
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#directive"
    },
    {
      "include": "#variable"
    }
  ],
  "repository": {
    "comment": {
      "name": "comment.block.yapl",
      "begin": "\\{#",
      "end": "#\\}",
      "contentName": "comment.block.content.yapl"
    },
    "variable": {
      "name": "meta.interpolation.yapl",
      "begin": "\\{\\{-?\\s*",
      "end": "\\s*-?\\}\\}",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.interpolation.begin.yapl"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.interpolation.end.yapl"
        }
      },
      "patterns": [
        {
          "match": "\\b(default|upper|lower|trim|length)\\b",
          "name": "support.function.filter.yapl"
        },
        {
          "match": "\\|",
          "name": "keyword.operator.filter.yapl"
        },
        {
          "match": "[a-zA-Z_][a-zA-Z0-9_\\.]*",
          "name": "variable.other.yapl"
        },
        {
          "match": "\"[^\"]*\"|'[^']*'",
          "name": "string.quoted.yapl"
        },
        {
          "match": "\\b\\d+(\\.\\d+)?\\b",
          "name": "constant.numeric.yapl"
        },
        {
          "match": "\\b(true|false|null)\\b",
          "name": "constant.language.yapl"
        }
      ]
    },
    "directive": {
      "name": "meta.directive.yapl",
      "begin": "\\{%-?\\s*",
      "end": "\\s*-?%\\}",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.directive.begin.yapl"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.section.directive.end.yapl"
        }
      },
      "patterns": [
        {
          "match": "\\b(extends|block|endblock|include|with|mixin|if|else|elif|endif|for|endfor|super)\\b",
          "name": "keyword.control.yapl"
        },
        {
          "match": "\\b(is|defined|not)\\b",
          "name": "keyword.operator.yapl"
        },
        {
          "match": "==|!=|<=|>=|<|>",
          "name": "keyword.operator.comparison.yapl"
        },
        {
          "match": "\"[^\"]*\"|'[^']*'",
          "name": "string.quoted.yapl"
        },
        {
          "match": "[a-zA-Z_][a-zA-Z0-9_\\.:-]*",
          "name": "entity.name.yapl"
        }
      ]
    }
  }
}